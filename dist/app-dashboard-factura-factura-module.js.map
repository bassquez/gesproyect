{"version":3,"sources":["webpack:///./src/app/core/models/factura.model.ts","webpack:///./src/app/dashboard/factura/factura-routing.module.ts","webpack:///./src/app/dashboard/factura/factura.module.ts","webpack:///./src/app/dashboard/factura/factura/factura.component.html","webpack:///./src/app/dashboard/factura/factura/factura.component.scss","webpack:///./src/app/dashboard/factura/factura/factura.component.ts","webpack:///./src/app/dashboard/factura/facturas/facturas.component.html","webpack:///./src/app/dashboard/factura/facturas/facturas.component.scss","webpack:///./src/app/dashboard/factura/facturas/facturas.component.ts","webpack:///./src/app/dashboard/factura/proyecto/proyecto.component.html","webpack:///./src/app/dashboard/factura/proyecto/proyecto.component.scss","webpack:///./src/app/dashboard/factura/proyecto/proyecto.component.ts","webpack:///./src/app/dashboard/factura/root/root.component.html","webpack:///./src/app/dashboard/factura/root/root.component.scss","webpack:///./src/app/dashboard/factura/root/root.component.ts"],"names":[],"mappings":"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","file":"app-dashboard-factura-factura-module.js","sourcesContent":["import { Proyecto } from './proyecto.model';\nimport { FuenteFinanciacion } from './fuenteFinanciacion.model';\n\nexport class Factura {\n    _id?: string;\n    proyecto?: Proyecto;\n    fuenteFinanciacion?: FuenteFinanciacion;\n    valor?: number;\n    identificacion?: string;\n    fecha?: Date;\n    avalado?: boolean;\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FacturaComponent } from './factura/factura.component';\nimport { RootComponent } from './root/root.component';\nimport { ProyectoComponent } from './proyecto/proyecto.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: RootComponent,\n  children: [\n    {\n      path: '',\n      redirectTo: 'i',\n      pathMatch: 'full'\n    },\n    {\n      path: 'i',\n      component: ProyectoComponent,\n      data: {\n        title: 'Proyectos'\n      }\n    },\n    {\n      path: 'facturas/:id',\n      component: FacturaComponent,\n      data: {\n        title: 'Facturas'\n      }\n    }\n  ]\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FacturaRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FacturaComponent } from './factura/factura.component';\nimport { RootComponent } from './root/root.component';\nimport { FacturaRoutingModule } from './factura-routing.module';\nimport { SharedModule } from '../../shared';\nimport { ProyectoComponent } from './proyecto/proyecto.component';\nimport { FacturasComponent } from './facturas/facturas.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FacturaRoutingModule,\n    SharedModule\n  ],\n  declarations: [FacturaComponent, RootComponent, ProyectoComponent, FacturasComponent]\n})\nexport class FacturaModule { }\n","module.exports = \"<gp-toast [message]=\\\"toast.message\\\"></gp-toast>\\n<div class=\\\"container\\\">\\n  <mat-card>\\n    <mat-card-header class=\\\"row\\\">\\n      <mat-card-title class=\\\"col-12\\\">\\n          <h1>Proyecto {{_proyecto.identificacion | uppercase}}</h1>\\n\\n      </mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content class=\\\"row container-fluid\\\">\\n      <section class=\\\"row align-items-center justify-content-around\\\">\\n        <form [formGroup]=\\\"facturasForm\\\" (ngSubmit)=\\\"addFactura()\\\" class=\\\"form-signin container-fluid\\\">\\n          <div class=\\\"row justify-content-center align-items-center\\\">\\n            <div class=\\\"col\\\">\\n              <mat-form-field color=\\\"accent\\\" class=\\\"col\\\" appearance=\\\"fill\\\">\\n                <mat-select placeholder=\\\"Proyectos\\\" [compareWith]=\\\"compareFn\\\" hidden name=\\\"proyecto\\\" [(value)]=\\\"_proyecto\\\"\\n                  [disabled]=\\\"_proyecto.inversion !== 0\\\" (ngModelChange)=\\\"getFacturasPorProyecto()\\\" formControlName=\\\"proyecto\\\">\\n                  <mat-option *ngFor=\\\"let proyecto of proyectos\\\" [value]=\\\"proyecto\\\">\\n                    {{proyecto.identificacion}}\\n                  </mat-option>\\n                </mat-select>\\n              </mat-form-field>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"row justify-content-center align-items-center\\\">\\n            <mat-form-field class=\\\"col\\\" color=\\\"accent\\\" appearance=\\\"fill\\\">\\n              <mat-label>Fecha de factura</mat-label>\\n              <input #fechaInicioS matInput [matDatepicker]=\\\"picker\\\" nombre=\\\"fecha\\\" formControlName=\\\"fecha\\\" placeholder=\\\"Choose a date\\\">\\n              <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n              <mat-datepicker #picker></mat-datepicker>\\n            </mat-form-field>\\n            <mat-form-field color=\\\"accent\\\" class=\\\"col\\\" appearance=\\\"fill\\\">\\n              <mat-select placeholder=\\\"Fuentes de Financiacion\\\" [(ngModel)]=\\\"fuente\\\" name=\\\"fuenteFinanciacion\\\"\\n                formControlName=\\\"fuenteFinanciacion\\\">\\n                <mat-option *ngFor=\\\"let fuente of fuentesPorProyecto\\\" [value]=\\\"fuente.fuenteProyecto\\\">\\n                  {{fuente.fuenteProyecto.nombre}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n            <mat-form-field color=\\\"accent\\\" class=\\\"col\\\" appearance=\\\"fill\\\">\\n              <input matInput placeholder=\\\"Identificacion\\\" value=\\\"\\\" formControlName=\\\"identificacion\\\">\\n            </mat-form-field>\\n            <mat-form-field color=\\\"accent\\\" class=\\\"col\\\" appearance=\\\"fill\\\">\\n              <input matInput placeholder=\\\"Valor\\\" value=\\\"\\\" formControlName=\\\"valor\\\">\\n            </mat-form-field>\\n          </div>\\n\\n          <div>\\n            <button mat-flat-button [disabled]=\\\"!facturasForm.valid\\\">Agregar Factura</button>\\n          </div>\\n        </form>\\n      </section>\\n      <div class=\\\"row align-items-center justify-content-around\\\">\\n        <div class=\\\"table-responsive-md col\\\">\\n          <table class=\\\"table mat-elevation-z5\\\" *ngIf=\\\"!isEditing\\\">\\n            <thead class=\\\"\\\">\\n              <tr>\\n                <th scope=\\\"col\\\">Fuente de Financiacion</th>\\n                <th scope=\\\"col\\\">Inversion</th>\\n                <th scope=\\\"col\\\">Faltante por ejecutar</th>\\n                <th scope=\\\"col\\\">Facturas</th>\\n                <th scope=\\\"col\\\">Facturas Total</th>\\n              </tr>\\n            </thead>\\n            <tbody *ngIf=\\\"fuentesPorProyecto.length === 0\\\">\\n              <tr>\\n                <td colspan=\\\"4\\\">No se han agregado Fuentes Financiación.</td>\\n              </tr>\\n            </tbody>\\n            <tbody>\\n              <tr *ngFor=\\\"let fs of facturasPorFuente\\\">\\n                <td class=\\\"align-middle\\\" scope=\\\"row\\\">{{fs.fuente.fuenteProyecto.nombre}}</td>\\n                <td class=\\\"align-middle\\\" scope=\\\"row\\\">{{fs.fuente.inversion | currency: 'COP'}}</td>\\n                <td class=\\\"align-middle\\\" scope=\\\"row\\\">{{fs.fuente.inversion - fs.totalFacturas | currency: 'COP' }}</td>\\n                <td class=\\\"align-middle\\\" scope=\\\"row\\\" *ngIf=\\\"fs.facturas.length > 0\\\">\\n                  <mat-list>\\n                    <mat-list-item *ngFor=\\\"let f of fs.facturas\\\">\\n                      <h4 mat-line><strong>Identificación: </strong>{{f.identificacion | uppercase}}</h4>\\n                      <p mat-line><strong>Valor: </strong>{{f.valor | currency: 'COP'}} </p>\\n                      <p mat-line><strong>Fecha: </strong>{{f.fecha | date : 'dd MMM yyyy'}} </p>\\n\\n                      <div class=\\\"col\\\">\\n                        <button mat-stroked-button color=\\\"warn\\\" class=\\\"row\\\" (click)=\\\"deleteFactura(f)\\\">\\n                          <i class=\\\"fa fa-trash\\\"></i> Delete\\n                        </button>\\n                        <button mat-stroked-button color=\\\"\\\" class=\\\"row\\\" (click)=\\\"enableEditing(f)\\\">\\n                          <i class=\\\"fa fa-edit\\\"></i> Editar\\n                        </button>\\n                      </div>\\n                    </mat-list-item>\\n                  </mat-list>\\n                </td>\\n                <td class=\\\"align-middle\\\" scope=\\\"row\\\" *ngIf=\\\"fs.facturas.length === 0\\\">No hay Facturas para esta Fuente</td>\\n                <td class=\\\"align-middle\\\" scope=\\\"row\\\">{{fs.totalFacturas | currency: 'COP'}}</td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"container-fluid\\\" *ngIf=\\\"isEditing\\\">\\n        <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"editFactura(factura)\\\" class=\\\"form-signin container-fluid\\\">\\n          <div class=\\\"row justify-content-center align-items-center\\\">\\n            <div class=\\\"col\\\">{{factura.identificacion}}</div>\\n            <div class=\\\"col\\\">{{factura.fuenteFinanciacion.nombre}}</div>\\n            <div class=\\\"col\\\">\\n              <mat-checkbox [(ngModel)]=\\\"factura.avalado\\\" [ngModelOptions]=\\\"{standalone: true}\\\">Avalado?</mat-checkbox>\\n            </div>\\n            <div class=\\\"col\\\">\\n              <mat-form-field color=\\\"accent\\\" class=\\\"col\\\" appearance=\\\"fill\\\">\\n                <mat-label>Valor</mat-label>\\n                <input type=\\\"number\\\" matInput placeholder=\\\"Valor\\\" required [(ngModel)]=\\\"factura.valor\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n              </mat-form-field>\\n            </div>\\n\\n            <div class=\\\"col\\\">\\n              <button mat-flat-button type=\\\"submit\\\" color=\\\"accent\\\" [disabled]=\\\"!form.form.valid\\\">Editar</button>\\n              <button mat-flat-button type=\\\"button\\\" color=\\\"warn\\\" (click)=\\\"cancelEditing()\\\">\\n                <i class=\\\"fa fa-times\\\"></i> Cancel</button>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n    </mat-card-content>\\n  </mat-card>\\n</div>\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Proyecto } from '../../../core/models/proyecto.model';\nimport { FuenteFinanciacionProyecto } from '../../../core/models/fuenteFinanciacionProyecto.model';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { FuenteFinanciacion } from '../../../core/models/fuenteFinanciacion.model';\nimport { ToastComponent } from '../../../shared/toast/toast.component';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FuenteFinanciacionService } from '../../../core/services/fuenteFinanciacion.service';\nimport { FuenteFinanciacionProyectoService } from '../../../core/services/fuenteFinanciacionProyecto.service';\nimport { ProyectoService } from '../../../core/services/proyecto.service';\nimport { FacturaService } from '../../../core/services/factura.service';\nimport { Factura } from '../../../core/models/factura.model';\nimport { Sort } from '@angular/material';\nimport { MatSort, MatTableDataSource } from '@angular/material';\nimport { isNumber } from 'util';\n\nexport interface FacturasPorFuente {\n\n  fuente?: FuenteFinanciacion;\n  facturas?: Factura[];\n  totalFacturas?: number;\n}\n\n@Component({\n  selector: 'gp-factura',\n  templateUrl: './factura.component.html',\n  styleUrls: ['./factura.component.scss']\n})\nexport class FacturaComponent implements OnInit {\n  isEditing = false;\n\n  facturasForm: FormGroup;\n\n  factura = new Factura();\n\n  proyecto = new FormControl('');\n  fuenteFinanciacion = new FormControl('', [\n    Validators.required\n  ]);\n  valor = new FormControl('', [\n    Validators.required\n  ]);\n  _proyecto = new Proyecto();\n\n  identificacion = new FormControl('', [\n    Validators.required\n  ]);\n\n  fecha = new FormControl('', [\n    Validators.required\n  ]);\n\n  fuentesFinanciacion: FuenteFinanciacion[] = [];\n\n  facturasPorProyecto: Factura[] = [];\n\n  proyectos: Proyecto[] = [];\n  facturaValor = 0;\n\n  id: string;\n  fuentesPorProyecto: FuenteFinanciacionProyecto[] = [];\n  f: Object;\n  sumaFacturas = 0;\n  f2: Factura[] = [];\n  facturasPorFuente = [];\n  fuente: FuenteFinanciacion;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private formBuilder: FormBuilder,\n    private router: Router,\n    public toast: ToastComponent,\n    private fuentesFinanciacionService: FuenteFinanciacionService,\n    private fuenteFinanaciacionProyectoService: FuenteFinanciacionProyectoService,\n    private proyectoService: ProyectoService,\n    private facturaService: FacturaService\n  ) {\n  }\n\n  ngOnInit() {\n    this.id = this._route.snapshot.paramMap.get('id');\n    this.getProyectoIdentificacion();\n    this.facturasForm = this.formBuilder.group({\n      proyecto: this.proyecto,\n      fuenteFinanciacion: this.fuenteFinanciacion,\n      identificacion: this.identificacion,\n      valor: this.valor,\n      fecha: this.fecha,\n      avalado: false\n    });\n  }\n\n  getProyectoIdentificacion() {\n    this.proyectoService.getProyectoByIdentificacion(this.id).subscribe(\n      data => this._proyecto = data,\n      error => console.log(error),\n      () => {\n        this.facturasForm.get('proyecto').setValue(this._proyecto);\n        this.getFacturasPorProyecto();\n        this.getFuentesPorProyecto();\n      }\n    );\n\n  }\n  getfuentesFinanciacion() {\n    this.fuentesFinanciacionService.getFuenteFinanciacions().subscribe(\n      data => this.fuentesFinanciacion = data,\n      error => console.log(error)\n    );\n  }\n\n  getFuentesPorProyecto() {\n\n    this.fuenteFinanaciacionProyectoService.getFuenteFinanciacionProyecto(this._proyecto._id).subscribe(\n      data => this.fuentesPorProyecto = data,\n      error => console.log(error)\n    );\n  }\n\n\n  getProyectos() {\n    this.proyectoService.getProyectos().subscribe(\n      data => this.proyectos = data,\n      error => console.log(error)\n    );\n  }\n  addFactura() {\n    let i = 0;\n    let enFacturasFuentes = false;\n    while (i < this.facturasPorFuente.length) {\n      const element = this.facturasPorFuente[i];\n      if (element.fuente.fuenteProyecto._id === this.fuente._id) {\n        console.log('Encontró');\n        enFacturasFuentes = true;\n        break;\n      }\n      i++;\n    }\n    if (enFacturasFuentes === true) {\n      const e = this.facturasPorFuente[i];\n      const suma: number = +e.totalFacturas + +this.valor.value;\n\n      console.log(suma);\n      console.log(e.fuente.inversion);\n\n      if (suma > e.fuente.inversion) {\n        this.toast.setMessage('La Factura no se guardo por que la fuente de finanaciacion se lleno', 'danger');\n      } else {\n        this.facturaService.addFactura(this.facturasForm.value).subscribe(\n          res => {\n            this.toast.setMessage('Se guardo exitosamente la fuente!', 'success');\n            // this.router.navigate(['//dashboard/proyecto/']);\n          },\n          error => this.toast.setMessage('La Factura no se guardo', 'danger'),\n          () => this.getFacturasPorProyecto()\n        );\n        this.fuenteFinanciacion.reset();\n        this.valor.reset();\n        this.fuenteFinanciacion.clearValidators();\n        this.valor.clearValidators();\n      }\n    }\n  }\n  deleteFactura(factura: Factura) {\n    if (window.confirm('Estás segur@ que quieres Eliminar ' +\n      factura.identificacion + ' de el proyecto ' + '?')) {\n      this.facturaService.deleteFactura(factura).subscribe(\n        data => this.toast.setMessage('proyecto deleted successfully.', 'success'),\n        error => console.log(error),\n        () => this.getFacturasPorProyecto()\n      );\n    }\n  }\n\n  enableEditing(factura: Factura) {\n    this.isEditing = true;\n    this.factura = factura;\n  }\n\n  cancelEditing() {\n    this.isEditing = false;\n    this.factura = new Factura();\n    this.toast.setMessage('Edición cancelada.', 'warning');\n    // reload the cats to reset the editing\n    this.getFacturasPorProyecto();\n  }\n\n  editFactura(factura: Factura) {\n    this.facturaService.editFactura(factura).subscribe(\n      () => {\n        this.isEditing = false;\n        this.factura = factura;\n        this.toast.setMessage('item editado con exito.', 'success');\n        this.getFacturasPorProyecto();\n      },\n      error => console.log(error)\n    );\n  }\n\n  getFacturasPorProyecto() {\n    this.facturaService.getFactura(this._proyecto._id).subscribe(\n      data => this.facturasPorProyecto = data,\n      error => console.log(error),\n      () => {\n        this.facturaValor = 0;\n        for (let index = 0; index < this.facturasPorProyecto.length; index++) {\n          this.facturaValor = this.facturaValor + this.facturasPorProyecto[index].valor;\n        }\n        this.facturasPorFuete();\n\n      }\n    );\n  }\n\n  facturasPorFuete() {\n    this.facturasPorFuente = [];\n    for (let f = 0; f < this.fuentesPorProyecto.length; f++) {\n      const fuente = this.fuentesPorProyecto[f];\n      this.f = new Object();\n      this.f2 = [];\n\n\n      this.facturaService.getFacturaFuente(fuente.fuenteProyecto._id, this._proyecto._id).subscribe(\n        data => {\n          this.sumaFacturas = 0;\n          this.f2 = data;\n          for (let index = 0; index < this.f2.length; index++) {\n            this.sumaFacturas = this.sumaFacturas + this.f2[index].valor;\n          }\n          this.f = {\n            fuente: fuente,\n            facturas: data,\n            totalFacturas: this.sumaFacturas\n          };\n          this.facturasPorFuente.push(this.f);\n        },\n        error => console.log(error)\n      );\n\n    }\n  }\n\n  compareFn(proyecto1: Proyecto, proyecto2: Proyecto) {\n    return proyecto1 && proyecto2 ? proyecto1.identificacion === proyecto2.identificacion : proyecto1 === proyecto2;\n  }\n\n}","module.exports = \"<p>\\n  facturas works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'gp-facturas',\n  templateUrl: './facturas.component.html',\n  styleUrls: ['./facturas.component.scss']\n})\nexport class FacturasComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row justify-content-around\\\">\\n    <mat-form-field color=\\\"accent\\\" class=\\\"col-5\\\" appearance=\\\"fill\\\">\\n      <input matInput [matAutocomplete]=\\\"auto\\\" [(ngModel)]=\\\"sProyecto\\\" placeholder=\\\"Busca Aqui\\\" (keyup)=\\\"search()\\\" class=\\\"search-input\\\" />\\n      <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\n        <mat-option *ngFor=\\\"let proyecto of proyectos \\\" [value]=\\\"proyecto.identificacion\\\">\\n          <span>{{proyecto.identificacion}}</span>\\n        </mat-option>\\n      </mat-autocomplete>\\n    </mat-form-field>\\n  </div>\\n  <div class=\\\"row justify-content-around\\\">\\n    <div class=\\\"col-4\\\">\\n      <mat-nav-list>\\n        <mat-list-item *ngFor=\\\"let proyecto of proyectos\\\" (click)=\\\"factura(proyecto)\\\">\\n          <mat-icon class=\\\"lista\\\" mat-list-icon>assessment</mat-icon>\\n          <h1 class=\\\"lista\\\" mat-line><strong>Proyecto: </strong>{{proyecto.identificacion | uppercase}}</h1>\\n          <p class=\\\"lista\\\" mat-line> <strong>Contratista: </strong>{{proyecto.contratista.nombre | uppercase}} </p>\\n          <p class=\\\"lista\\\" mat-line> <strong>Terminación: </strong>{{proyecto.fechaFin | date : 'dd MMM yyyy'}} </p>\\n          <p class=\\\"lista\\\" mat-line> <strong>Interventor: </strong>{{proyecto.interventor.nombre + ' ' +proyecto.interventor.apellido\\n            | uppercase}} </p>\\n        </mat-list-item>\\n      </mat-nav-list>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { ProyectoService } from '../../../core/services/proyecto.service';\nimport { Proyecto } from '../../../core/models/proyecto.model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'gp-proyecto',\n  templateUrl: './proyecto.component.html',\n  styleUrls: ['./proyecto.component.scss']\n})\nexport class ProyectoComponent implements OnInit {\n\n\n  proyectos: Proyecto[] = [];\n\n  proyecto: Proyecto;\n  sProyecto = '';\n\n  constructor(\n    private proyectoService: ProyectoService,\n    public router: Router\n\n  ) { }\n\n  ngOnInit() {\n    this.search();\n  }\n  getProyectos() {\n    this.proyectoService.getProyectos().subscribe(\n      data => this.proyectos = data,\n      error => console.log(error)\n    );\n  }\n  search() {\n    if (this.sProyecto === '') {\n      this.getProyectos();\n    } else {\n      this.proyectoService.searchProyecto(this.sProyecto).subscribe(\n        data => this.proyectos = data,\n        error => console.log(error)\n      );\n    }\n\n  }\n  factura(proyecto) {\n    this.router.navigate(['/dashboard/factura/facturas/' + proyecto.identificacion]);\n\n  }\n}\n","module.exports = \"<div [@routeAnimations]=\\\"o.isActivated && o.activatedRoute.routeConfig.path\\\">\\n  <router-outlet #o=\\\"outlet\\\"></router-outlet>\\n</div>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { routeAnimations } from '../../../core';\n\n@Component({\n  selector: 'gp-root',\n  templateUrl: './root.component.html',\n  styleUrls: ['./root.component.scss'],\n  animations: [routeAnimations]\n})\nexport class RootComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}